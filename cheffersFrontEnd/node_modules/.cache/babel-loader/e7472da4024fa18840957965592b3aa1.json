{"ast":null,"code":"var _jsxFileName = \"/Users/yonisabdulahi/Desktop/cheffers/cheffers_frontend/src/pages/RecipePage.js\",\n    _s = $RefreshSig$();\n\nimport { getRecipeById } from \"../adapters/recipeAdapter\";\nimport { useParams } from \"react-router\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport FormPageNavBar from \"../components/FormPageNavBar\";\nimport \"../App.css\";\nimport UpdateRecipeForm from \"../components/UpdateRecipeForm\";\nimport { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport vegetarianIcon from \"../images/vegetarianIcon.png\";\nimport veganIcon from \"../images/veganIcon.png\";\nimport pescatarianIcon from \"../images/pescatarianIcon.png\";\nimport meatOnlyIcon from \"../images/meatOnlyIcon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecipePage = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [showUpdateForm, setShowUpdateForm] = useState(false);\n  const theme = useContext(ThemeContext);\n  const darkMode = theme.state.darkMode;\n  useEffect(() => {\n    getRecipeById(id).then(r => setRecipe(r));\n  }, []);\n  let navigate = useNavigate();\n\n  const goHome = () => {\n    navigate(\"/\");\n  };\n\n  const updateForm = () => {\n    setShowUpdateForm(true);\n  };\n\n  return recipe ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormPageNavBar, {\n      goHome: goHome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `recipe-page ${darkMode ? \"rec-pg-dark\" : \"rec-pg-light\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Cuisine: ${recipe.cuisine}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Spice Level: ${recipe.spiceRating}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Cooking Time: ${recipe.cookingTime} minutes`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Meal Type: ${recipe.mealType}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-icon-block\",\n        children: [recipe.vegetarian ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: vegetarianIcon,\n          alt: \"vegetarian\",\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), recipe.vegan ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: veganIcon,\n          alt: \"Vegan Icon\",\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), recipe.pescatarian ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pescatarianIcon,\n          alt: \"Pescatarian Icon\",\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), recipe.meatOnly ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: meatOnlyIcon,\n          alt: \"Meat Icon\",\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cooking-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recipe-instructions\",\n            children: recipe.instructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateForm,\n        id: \"recipeButton\",\n        children: \"Update Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), showUpdateForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(UpdateRecipeForm, {\n        recipe: recipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RecipePage, \"JfLP98ULKnasOepB6g0jFQSp+KQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = RecipePage;\nexport default RecipePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"sources":["/Users/yonisabdulahi/Desktop/cheffers/cheffers_frontend/src/pages/RecipePage.js"],"names":["getRecipeById","useParams","useState","useEffect","useNavigate","FormPageNavBar","UpdateRecipeForm","useContext","ThemeContext","vegetarianIcon","veganIcon","pescatarianIcon","meatOnlyIcon","RecipePage","props","id","recipe","setRecipe","showUpdateForm","setShowUpdateForm","theme","darkMode","state","then","r","navigate","goHome","updateForm","name","cuisine","spiceRating","cookingTime","mealType","vegetarian","vegan","pescatarian","meatOnly","instructions"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAO,YAAP;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM;AAAEC,IAAAA;AAAF,MAASd,SAAS,EAAxB;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMkB,KAAK,GAAGb,UAAU,CAACC,YAAD,CAAxB;AACA,QAAMa,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAYD,QAA7B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,aAAa,CAACe,EAAD,CAAb,CAAkBQ,IAAlB,CAAuBC,CAAC,IAAIP,SAAS,CAACO,CAAD,CAArC;AAEH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIC,QAAQ,GAAGrB,WAAW,EAA1B;;AACA,QAAMsB,MAAM,GAAG,MAAM;AACjBD,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,GAFD;;AAKA,QAAME,UAAU,GAAG,MAAM;AACrBR,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,SACIH,MAAM,gBAGF;AAAA,4BAEI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEU;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAG,eAAcL,QAAQ,GAAG,aAAH,GAAmB,cAAe,EAAzE;AAAA,8BAEI;AAAA,kBAAKL,MAAM,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAM,YAAWZ,MAAM,CAACa,OAAQ;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAM,gBAAeb,MAAM,CAACc,WAAY;AAAxC;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAM,iBAAgBd,MAAM,CAACe,WAAY;AAAzC;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBAAM,cAAaf,MAAM,CAACgB,QAAS;AAAnC;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,mBACThB,MAAM,CAACiB,UAAP,gBACD;AAAK,UAAA,GAAG,EAAExB,cAAV;AAA0B,UAAA,GAAG,EAAC,YAA9B;AAA2C,UAAA,SAAS,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBADC,gBAGD,qCAJU,EAOTO,MAAM,CAACkB,KAAP,gBACD;AAAK,UAAA,GAAG,EAAExB,SAAV;AAAqB,UAAA,GAAG,EAAC,YAAzB;AAAsC,UAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADC,gBAGA,qCAVS,EAaTM,MAAM,CAACmB,WAAP,gBACD;AAAK,UAAA,GAAG,EAAExB,eAAV;AAA2B,UAAA,GAAG,EAAC,kBAA/B;AAAkD,UAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADC,gBAGD,qCAhBU,EAmBTK,MAAM,CAACoB,QAAP,gBACD;AAAK,UAAA,GAAG,EAAExB,YAAV;AAAwB,UAAA,GAAG,EAAC,WAA5B;AAAwC,UAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADC,gBAID,qCAvBU;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAiCI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAG;AAAM,YAAA,SAAS,EAAC,qBAAhB;AAAA,sBAAuCI,MAAM,CAACqB;AAA9C;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ,eAsCI;AAAQ,QAAA,OAAO,EAAEV,UAAjB;AAA6B,QAAA,EAAE,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EA6CKT,cAAc,gBACX;AAAA,6BACI,QAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,qBADW,gBAKX,qCAlDR;AAAA,kBAHE,gBAyDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA1DR;AA4DH,CApFD;;GAAMH,U;UAEaZ,S,EAYAG,W;;;KAdbS,U;AAsFN,eAAeA,UAAf","sourcesContent":["import { getRecipeById } from \"../adapters/recipeAdapter\"\nimport { useParams } from \"react-router\";\nimport { useState, useEffect } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport FormPageNavBar from \"../components/FormPageNavBar\";\nimport \"../App.css\"\n\nimport UpdateRecipeForm from \"../components/UpdateRecipeForm\";\nimport { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport vegetarianIcon from \"../images/vegetarianIcon.png\"\nimport veganIcon from \"../images/veganIcon.png\"\nimport pescatarianIcon from \"../images/pescatarianIcon.png\"\nimport meatOnlyIcon from \"../images/meatOnlyIcon.png\"\n\n\nconst RecipePage = (props) => {\n\n    const { id } = useParams();\n    const [recipe, setRecipe] = useState(null)\n    const [showUpdateForm, setShowUpdateForm] = useState(false)\n\n    const theme = useContext(ThemeContext);\n    const darkMode = theme.state.darkMode;\n\n    useEffect(() => {\n        getRecipeById(id).then(r => setRecipe(r))\n\n    }, [])\n\n    let navigate = useNavigate();\n    const goHome = () => {\n        navigate(\"/\");\n    }\n\n\n    const updateForm = () => {\n        setShowUpdateForm(true);\n    }\n\n    return (\n        recipe ?\n\n\n            <>\n\n                <FormPageNavBar goHome={goHome} />\n                <div className={`recipe-page ${darkMode ? \"rec-pg-dark\" : \"rec-pg-light\"}`}>\n\n                    <h1>{recipe.name}</h1>\n                    <h3>{`Cuisine: ${recipe.cuisine}`}</h3>\n                    <h3>{`Spice Level: ${recipe.spiceRating}`}</h3>\n                    <h3>{`Cooking Time: ${recipe.cookingTime} minutes`}</h3>\n                    <h3>{`Meal Type: ${recipe.mealType}`}</h3>\n                    <div className=\"recipe-icon-block\">\n          {recipe.vegetarian ? \n          <img src={vegetarianIcon} alt=\"vegetarian\" className=\"icon\"/>\n          :\n          <>\n          </>\n        }\n          {recipe.vegan ? \n          <img src={veganIcon} alt=\"Vegan Icon\" className=\"icon\"/>\n           :\n           <>\n           </>\n          }\n          {recipe.pescatarian ? \n          <img src={pescatarianIcon} alt=\"Pescatarian Icon\" className=\"icon\"/>\n          :\n          <>\n          </>\n         }\n          {recipe.meatOnly ?\n          <img src={meatOnlyIcon} alt=\"Meat Icon\" className=\"icon\"/>\n          :\n          \n          <></>}\n        \n      </div>\n                    <div className=\"cooking-instructions\">\n                        <h2>Instructions</h2>\n                        <p><span className=\"recipe-instructions\">{recipe.instructions}</span></p>\n                    </div>\n\n                    <button onClick={updateForm} id=\"recipeButton\">Update Recipe</button>\n                </div>\n\n\n                {showUpdateForm ?\n                    <>\n                        <UpdateRecipeForm recipe={recipe} />\n                    </>\n                    :\n                    <>\n                    </>}\n            </>\n            :\n            <p>Loading...</p>\n    )\n}\n\nexport default RecipePage;"]},"metadata":{},"sourceType":"module"}