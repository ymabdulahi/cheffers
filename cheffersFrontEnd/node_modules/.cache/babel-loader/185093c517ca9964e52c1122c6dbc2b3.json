{"ast":null,"code":"var _jsxFileName = \"/Users/yonisabdulahi/Desktop/cheffers/cheffers_frontend/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport \"../adapters/recipeAdapter\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { getAllRecipes } from \"../adapters/recipeAdapter\";\nimport CardList from \"../components/CardList\";\nimport NavBar from \"../components/NavBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddNewButton from \"../components/AddNewButton\";\nimport PopulateDBbutton from \"../components/PopulateDBbutton\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [recipes, setRecipes] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [recipesFiltered, setRecipesFiltered] = useState([]);\n  useEffect(() => {\n    getAllRecipes().then(response => setRecipes(response));\n  }, []);\n\n  const searchChange = s => {\n    console.log(s.target.value);\n    setInput(s.target.value);\n    setRecipesFiltered(\"\");\n  };\n\n  const sortRecipes = recipes ? recipes.sort((x, y) => {\n    return x.favourites === y.favourite ? 0 : x ? -1 : 1;\n  }) : null;\n  const filteredRecipes = recipes ? sortRecipes.filter(recipes => {\n    return recipes.name.toLowerCase().includes(input.toLowerCase());\n  }) : null;\n\n  const filteredToBreakFast = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.mealType.toLowerCase().includes(\"breakfast\");\n    });\n    setRecipesFiltered(newRecipes);\n    console.log(recipesFiltered.id);\n  };\n\n  const filteredToLunch = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.mealType.toLowerCase().includes(\"lunch\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToDinner = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.mealType.toLowerCase().includes(\"dinner\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToSnack = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.mealType.toLowerCase().includes(\"snack\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToDessert = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.mealType.toLowerCase().includes(\"dessert\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToVegetarian = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.vegetarian;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToVegan = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.vegan;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToMeatOnly = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.meatOnly;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToPescatarian = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.pescatarian;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToHot = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.spiceRating.toLowerCase().includes(\"hot\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToMedium = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.spiceRating.toLowerCase().includes(\"medium\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToMild = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.spiceRating.toLowerCase().includes(\"mild\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToSweet = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.spiceRating.toLowerCase().includes(\"sweet\");\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredTo30mins = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.cookingTime < 31;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToHour = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.cookingTime < 61;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const filteredToOverHour = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.cookingTime > 61;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const goHome = () => {\n    setRecipesFiltered(\"\");\n  };\n\n  const recipesToShow = recipesFiltered.length > 0 ? recipesFiltered : filteredRecipes;\n  let navigate = useNavigate();\n\n  const goNewRecipePage = () => {\n    navigate(\"/NewRecipePage\");\n  };\n\n  const goNewIngredientPage = () => {\n    navigate(\"/NewIngredientPage\");\n  };\n\n  const addToFaves = id => {\n    const findRecipe = recipes.find(recipes => recipes.id === id);\n    findRecipe.favourites = true;\n    const updateRecipes = [...recipes];\n    setRecipes(updateRecipes);\n  };\n\n  const removeFromFaves = id => {\n    const findRecipe = recipes.find(recipes => recipes.id === id);\n    findRecipe.favourites = false;\n    const updateRecipes = [...recipes];\n    setRecipes(updateRecipes);\n  };\n\n  const filteredToFaves = () => {\n    const newRecipes = recipes.filter(recipes => {\n      return recipes.favourites;\n    });\n    setRecipesFiltered(newRecipes);\n  };\n\n  const darkTheme = useContext(ThemeContext);\n  const darkMode = darkTheme.state.darkMode;\n  return recipes ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      goHome: goHome,\n      searchChange: searchChange,\n      value: input,\n      filteredToBreakFast: filteredToBreakFast,\n      filteredToLunch: filteredToLunch,\n      filteredToDinner: filteredToDinner,\n      filteredToSnack: filteredToSnack,\n      filteredToDessert: filteredToDessert,\n      filteredToVegetarian: filteredToVegetarian,\n      filteredToVegan: filteredToVegan,\n      filteredToMeatOnly: filteredToMeatOnly,\n      filteredToPescatarian: filteredToPescatarian,\n      filteredToHot: filteredToHot,\n      filteredToMedium: filteredToMedium,\n      filteredToMild: filteredToMild,\n      filteredToSweet: filteredToSweet,\n      filteredTo30mins: filteredTo30mins,\n      filteredToHour: filteredToHour,\n      filteredToOverHour: filteredToOverHour,\n      filteredToFaves: filteredToFaves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `homepage-title ${darkMode ? \"homepage-title-dark\" : \"homepage-title-light\"}`,\n      children: \"All Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      recipes: recipesToShow,\n      addToFaves: addToFaves,\n      removeFromFaves: removeFromFaves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      goHome: goHome,\n      searchChange: searchChange,\n      value: input,\n      filteredToBreakFast: filteredToBreakFast,\n      filteredToLunch: filteredToLunch,\n      filteredToDinner: filteredToDinner,\n      filteredToSnack: filteredToSnack,\n      filteredToDessert: filteredToDessert,\n      filteredToVegetarian: filteredToVegetarian,\n      filteredToVegan: filteredToVegan,\n      filteredToMeatOnly: filteredToMeatOnly,\n      filteredToPescatarian: filteredToPescatarian,\n      filteredToHot: filteredToHot,\n      filteredToMedium: filteredToMedium,\n      filteredToMild: filteredToMild,\n      filteredToSweet: filteredToSweet,\n      filteredTo30mins: filteredTo30mins,\n      filteredToHour: filteredToHour,\n      filteredToOverHour: filteredToOverHour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), \"// \", /*#__PURE__*/_jsxDEV(PopulateDBbutton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"BR6NwPb7qfTiZw9IRdYBF2/hwbM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/yonisabdulahi/Desktop/cheffers/cheffers_frontend/src/pages/HomePage.js"],"names":["useState","useEffect","useContext","getAllRecipes","CardList","NavBar","useNavigate","AddNewButton","PopulateDBbutton","ThemeContext","HomePage","recipes","setRecipes","input","setInput","recipesFiltered","setRecipesFiltered","then","response","searchChange","s","console","log","target","value","sortRecipes","sort","x","y","favourites","favourite","filteredRecipes","filter","name","toLowerCase","includes","filteredToBreakFast","newRecipes","mealType","id","filteredToLunch","filteredToDinner","filteredToSnack","filteredToDessert","filteredToVegetarian","vegetarian","filteredToVegan","vegan","filteredToMeatOnly","meatOnly","filteredToPescatarian","pescatarian","filteredToHot","spiceRating","filteredToMedium","filteredToMild","filteredToSweet","filteredTo30mins","cookingTime","filteredToHour","filteredToOverHour","goHome","recipesToShow","length","navigate","goNewRecipePage","goNewIngredientPage","addToFaves","findRecipe","find","updateRecipes","removeFromFaves","filteredToFaves","darkTheme","darkMode","state"],"mappings":";;;AAAA,OAAO,2BAAP;AACA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,aAAa,GAAGc,IAAhB,CAAqBC,QAAQ,IAAIN,UAAU,CAACM,QAAD,CAA3C;AAAuD,GADlD,EACoD,EADpD,CAAT;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAV,IAAAA,QAAQ,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACAR,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACH,GAJD;;AAMA,QAAMS,WAAW,GACjBd,OAAO,GACPA,OAAO,CAACe,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAC,WAAQD,CAAC,CAACE,UAAF,KAAiBD,CAAC,CAACE,SAApB,GAAgC,CAAhC,GAAoCH,CAAC,GAAE,CAAC,CAAH,GAAO,CAAnD;AAAsD,GAA9E,CADO,GAGP,IAJA;AAMA,QAAMI,eAAe,GACrBpB,OAAO,GACHc,WAAW,CAACO,MAAZ,CAAoBrB,OAAD,IAAY;AAC3B,WAAOA,OAAO,CAACsB,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCtB,KAAK,CAACqB,WAAN,EAApC,CAAP;AACH,GAFD,CADG,GAKH,IANJ;;AAQI,QAAME,mBAAmB,GAAG,MAAM;AAE9B,UAAMC,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC2B,QAAR,CAAiBJ,WAAjB,GAA+BC,QAA/B,CAAwC,WAAxC,CAAP;AAA6D,KAA1F,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYP,eAAe,CAACwB,EAA5B;AACH,GALD;;AAOA,QAAMC,eAAe,GAAG,MAAM;AAE1B,UAAMH,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC2B,QAAR,CAAiBJ,WAAjB,GAA+BC,QAA/B,CAAwC,OAAxC,CAAP;AAAyD,KAAtF,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMI,gBAAgB,GAAG,MAAM;AAE3B,UAAMJ,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC2B,QAAR,CAAiBJ,WAAjB,GAA+BC,QAA/B,CAAwC,QAAxC,CAAP;AAA0D,KAAvF,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMK,eAAe,GAAG,MAAM;AAE1B,UAAML,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC2B,QAAR,CAAiBJ,WAAjB,GAA+BC,QAA/B,CAAwC,OAAxC,CAAP;AAAyD,KAAtF,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMM,iBAAiB,GAAG,MAAM;AAE5B,UAAMN,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC2B,QAAR,CAAiBJ,WAAjB,GAA+BC,QAA/B,CAAwC,SAAxC,CAAP;AAA2D,KAAxF,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMO,oBAAoB,GAAG,MAAM;AAE/B,UAAMP,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAACkC,UAAf;AAA2B,KAAxD,CAAnB;AACA7B,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMS,eAAe,GAAG,MAAM;AAE1B,UAAMT,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAACoC,KAAf;AAAsB,KAAnD,CAAnB;AACA/B,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMW,kBAAkB,GAAG,MAAM;AAE7B,UAAMX,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAACsC,QAAf;AAAyB,KAAtD,CAAnB;AACAjC,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMa,qBAAqB,GAAG,MAAM;AAEhC,UAAMb,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAACwC,WAAf;AAA4B,KAAzD,CAAnB;AACAnC,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMe,aAAa,GAAG,MAAM;AAExB,UAAMf,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC0C,WAAR,CAAoBnB,WAApB,GAAkCC,QAAlC,CAA2C,KAA3C,CAAP;AAA0D,KAAvF,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMiB,gBAAgB,GAAG,MAAM;AAE3B,UAAMjB,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC0C,WAAR,CAAoBnB,WAApB,GAAkCC,QAAlC,CAA2C,QAA3C,CAAP;AAA6D,KAA1F,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMkB,cAAc,GAAG,MAAM;AAEzB,UAAMlB,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC0C,WAAR,CAAoBnB,WAApB,GAAkCC,QAAlC,CAA2C,MAA3C,CAAP;AAA2D,KAAxF,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMmB,eAAe,GAAG,MAAM;AAE1B,UAAMnB,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC0C,WAAR,CAAoBnB,WAApB,GAAkCC,QAAlC,CAA2C,OAA3C,CAAP;AAA4D,KAAzF,CAAnB;AACAnB,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMoB,gBAAgB,GAAG,MAAM;AAE3B,UAAMpB,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC+C,WAAR,GAAsB,EAA7B;AAAiC,KAA9D,CAAnB;AACA1C,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMsB,cAAc,GAAG,MAAM;AAEzB,UAAMtB,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC+C,WAAR,GAAsB,EAA7B;AAAiC,KAA9D,CAAnB;AACA1C,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMuB,kBAAkB,GAAG,MAAM;AAE7B,UAAMvB,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAAC+C,WAAR,GAAsB,EAA7B;AAAiC,KAA9D,CAAnB;AACA1C,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAJD;;AAMA,QAAMwB,MAAM,GAAG,MAAM;AACjB7C,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACH,GAFD;;AAIA,QAAM8C,aAAa,GAAG/C,eAAe,CAACgD,MAAhB,GAAyB,CAAzB,GAA6BhD,eAA7B,GAA+CgB,eAArE;AAEJ,MAAIiC,QAAQ,GAAG1D,WAAW,EAA1B;;AAEA,QAAM2D,eAAe,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAAC,gBAAD,CAAR;AACH,GAFD;;AAIA,QAAME,mBAAmB,GAAG,MAAM;AAC9BF,IAAAA,QAAQ,CAAC,oBAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,UAAU,GAAI5B,EAAD,IAAQ;AACvB,UAAM6B,UAAU,GAAGzD,OAAO,CAAC0D,IAAR,CAAa1D,OAAO,IAAIA,OAAO,CAAC4B,EAAR,KAAeA,EAAvC,CAAnB;AACA6B,IAAAA,UAAU,CAACvC,UAAX,GAAwB,IAAxB;AACA,UAAMyC,aAAa,GAAG,CAAC,GAAG3D,OAAJ,CAAtB;AACAC,IAAAA,UAAU,CAAC0D,aAAD,CAAV;AACH,GALD;;AAOA,QAAMC,eAAe,GAAIhC,EAAD,IAAQ;AAC5B,UAAM6B,UAAU,GAAGzD,OAAO,CAAC0D,IAAR,CAAa1D,OAAO,IAAIA,OAAO,CAAC4B,EAAR,KAAeA,EAAvC,CAAnB;AACA6B,IAAAA,UAAU,CAACvC,UAAX,GAAwB,KAAxB;AACA,UAAMyC,aAAa,GAAG,CAAC,GAAG3D,OAAJ,CAAtB;AACAC,IAAAA,UAAU,CAAC0D,aAAD,CAAV;AACH,GALD;;AAOA,QAAME,eAAe,GAAE,MAAM;AACzB,UAAMnC,UAAU,GAAG1B,OAAO,CAACqB,MAAR,CAAgBrB,OAAD,IAAY;AAAE,aAAOA,OAAO,CAACkB,UAAf;AAA2B,KAAxD,CAAnB;AACAb,IAAAA,kBAAkB,CAACqB,UAAD,CAAlB;AACH,GAHD;;AAKA,QAAMoC,SAAS,GAAGvE,UAAU,CAACO,YAAD,CAA5B;AACA,QAAMiE,QAAQ,GAAGD,SAAS,CAACE,KAAV,CAAgBD,QAAjC;AAEA,SACI/D,OAAO,gBACP;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEkD,MAAhB;AAAwB,MAAA,YAAY,EAAE1C,YAAtC;AAAoD,MAAA,KAAK,EAAEN,KAA3D;AAAkE,MAAA,mBAAmB,EAAEuB,mBAAvF;AACA,MAAA,eAAe,EAAEI,eADjB;AACkC,MAAA,gBAAgB,EAAEC,gBADpD;AACsE,MAAA,eAAe,EAAEC,eADvF;AAEA,MAAA,iBAAiB,EAAEC,iBAFnB;AAEsC,MAAA,oBAAoB,EAAEC,oBAF5D;AAEkF,MAAA,eAAe,EAAEE,eAFnG;AAGA,MAAA,kBAAkB,EAAEE,kBAHpB;AAGwC,MAAA,qBAAqB,EAAEE,qBAH/D;AAGsF,MAAA,aAAa,EAAEE,aAHrG;AAIA,MAAA,gBAAgB,EAAEE,gBAJlB;AAIoC,MAAA,cAAc,EAAEC,cAJpD;AAIoE,MAAA,eAAe,EAAEC,eAJrF;AAKA,MAAA,gBAAgB,EAAEC,gBALlB;AAKoC,MAAA,cAAc,EAAEE,cALpD;AAKoE,MAAA,kBAAkB,EAAEC,kBALxF;AAMA,MAAA,eAAe,EAAEY;AANjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAI,MAAA,SAAS,EAAG,kBAAiBE,QAAQ,GAAG,qBAAH,GAA2B,sBAAuB,EAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEZ,aAAnB;AAAkC,MAAA,UAAU,EAAEK,UAA9C;AAA0D,MAAA,eAAe,EAAEI;AAA3E;AAAA;AAAA;AAAA;AAAA,YATJ,eAWI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADO,gBAgBP;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEV,MAAhB;AAAwB,MAAA,YAAY,EAAE1C,YAAtC;AAAoD,MAAA,KAAK,EAAEN,KAA3D;AAAkE,MAAA,mBAAmB,EAAEuB,mBAAvF;AACI,MAAA,eAAe,EAAEI,eADrB;AACsC,MAAA,gBAAgB,EAAEC,gBADxD;AAC0E,MAAA,eAAe,EAAEC,eAD3F;AAEI,MAAA,iBAAiB,EAAEC,iBAFvB;AAE0C,MAAA,oBAAoB,EAAEC,oBAFhE;AAEsF,MAAA,eAAe,EAAEE,eAFvG;AAGI,MAAA,kBAAkB,EAAEE,kBAHxB;AAG4C,MAAA,qBAAqB,EAAEE,qBAHnE;AAG0F,MAAA,aAAa,EAAEE,aAHzG;AAII,MAAA,gBAAgB,EAAEE,gBAJtB;AAIwC,MAAA,cAAc,EAAEC,cAJxD;AAIwE,MAAA,eAAe,EAAEC,eAJzF;AAKI,MAAA,gBAAgB,EAAEC,gBALtB;AAKwC,MAAA,cAAc,EAAEE,cALxD;AAKwE,MAAA,kBAAkB,EAAEC;AAL5F;AAAA;AAAA;AAAA;AAAA,YADA,sBAOO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAPP,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA,kBAjBJ;AA4BH,CA/LD;;GAAMlD,Q;UAmIaJ,W;;;KAnIbI,Q;AAgMN,eAAeA,QAAf","sourcesContent":["import \"../adapters/recipeAdapter\"\nimport {useState, useEffect, useContext} from \"react\"\nimport {getAllRecipes} from \"../adapters/recipeAdapter\"\nimport CardList from \"../components/CardList\"\nimport NavBar from \"../components/NavBar\"\nimport {useNavigate} from \"react-router-dom\";\nimport AddNewButton from \"../components/AddNewButton\"\nimport PopulateDBbutton from \"../components/PopulateDBbutton\"\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nconst HomePage = () => {\n    const [recipes, setRecipes] = useState(null);\n    const [input, setInput] = useState(\"\");\n    const [recipesFiltered, setRecipesFiltered] = useState([]);\n\n    useEffect(()=>{\n        getAllRecipes().then(response => setRecipes(response))}, [])\n\n    const searchChange = (s) => {\n        console.log(s.target.value)\n        setInput(s.target.value)\n        setRecipesFiltered(\"\");\n    };\n\n    const sortRecipes = \n    recipes ?\n    recipes.sort((x, y) => {return (x.favourites === y.favourite)? 0 : x? -1 : 1;})\n    :\n    null;\n\n    const filteredRecipes = \n    recipes ?\n        sortRecipes.filter((recipes)=> {\n            return recipes.name.toLowerCase().includes(input.toLowerCase());\n        })\n        :\n        null;\n\n        const filteredToBreakFast = () => { \n   \n            const newRecipes = recipes.filter((recipes)=> { return recipes.mealType.toLowerCase().includes(\"breakfast\") })\n            setRecipesFiltered(newRecipes);\n            console.log(recipesFiltered.id);\n        }\n    \n        const filteredToLunch = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.mealType.toLowerCase().includes(\"lunch\") })\n            setRecipesFiltered(newRecipes);\n        }\n    \n        const filteredToDinner = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.mealType.toLowerCase().includes(\"dinner\") })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToSnack = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.mealType.toLowerCase().includes(\"snack\") })\n            setRecipesFiltered(newRecipes);\n        }\n    \n        const filteredToDessert = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.mealType.toLowerCase().includes(\"dessert\") })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToVegetarian = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.vegetarian })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToVegan = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.vegan })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToMeatOnly = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.meatOnly })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToPescatarian = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.pescatarian })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToHot = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.spiceRating.toLowerCase().includes(\"hot\") })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToMedium = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.spiceRating.toLowerCase().includes(\"medium\") })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToMild = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.spiceRating.toLowerCase().includes(\"mild\") })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToSweet = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.spiceRating.toLowerCase().includes(\"sweet\") })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredTo30mins = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.cookingTime < 31 })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToHour = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.cookingTime < 61 })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const filteredToOverHour = () => { \n       \n            const newRecipes = recipes.filter((recipes)=> { return recipes.cookingTime > 61 })\n            setRecipesFiltered(newRecipes);\n        }\n\n        const goHome = () => {\n            setRecipesFiltered(\"\");\n        }\n\n        const recipesToShow = recipesFiltered.length > 0 ? recipesFiltered : filteredRecipes;  \n\n    let navigate = useNavigate();\n\n    const goNewRecipePage = () => {\n        navigate(\"/NewRecipePage\")\n    }\n\n    const goNewIngredientPage = () => {\n        navigate(\"/NewIngredientPage\")\n    }\n    \n    const addToFaves = (id) => {\n        const findRecipe = recipes.find(recipes => recipes.id === id);\n        findRecipe.favourites = true;\n        const updateRecipes = [...recipes];\n        setRecipes(updateRecipes);\n    };\n\n    const removeFromFaves = (id) => {\n        const findRecipe = recipes.find(recipes => recipes.id === id);\n        findRecipe.favourites = false;\n        const updateRecipes = [...recipes];\n        setRecipes(updateRecipes);\n    };\n\n    const filteredToFaves= () => {   \n        const newRecipes = recipes.filter((recipes)=> { return recipes.favourites })\n        setRecipesFiltered(newRecipes);\n    }\n\n    const darkTheme = useContext(ThemeContext);\n    const darkMode = darkTheme.state.darkMode;\n\n    return (\n        recipes ?\n        <>\n            <NavBar goHome={goHome} searchChange={searchChange} value={input} filteredToBreakFast={filteredToBreakFast} \n            filteredToLunch={filteredToLunch} filteredToDinner={filteredToDinner} filteredToSnack={filteredToSnack} \n            filteredToDessert={filteredToDessert} filteredToVegetarian={filteredToVegetarian} filteredToVegan={filteredToVegan} \n            filteredToMeatOnly={filteredToMeatOnly} filteredToPescatarian={filteredToPescatarian} filteredToHot={filteredToHot}\n            filteredToMedium={filteredToMedium} filteredToMild={filteredToMild} filteredToSweet={filteredToSweet}\n            filteredTo30mins={filteredTo30mins} filteredToHour={filteredToHour} filteredToOverHour={filteredToOverHour}\n            filteredToFaves={filteredToFaves} />\n            <h1 className={`homepage-title ${darkMode ? \"homepage-title-dark\" : \"homepage-title-light\"}`}>All Recipes</h1>\n            <CardList recipes={recipesToShow} addToFaves={addToFaves} removeFromFaves={removeFromFaves}/>\n            {/* <PopulateDBbutton/> */}\n            <AddNewButton />\n        </>\n\n        :\n        <>\n        <NavBar goHome={goHome} searchChange={searchChange} value={input} filteredToBreakFast={filteredToBreakFast} \n            filteredToLunch={filteredToLunch} filteredToDinner={filteredToDinner} filteredToSnack={filteredToSnack} \n            filteredToDessert={filteredToDessert} filteredToVegetarian={filteredToVegetarian} filteredToVegan={filteredToVegan} \n            filteredToMeatOnly={filteredToMeatOnly} filteredToPescatarian={filteredToPescatarian} filteredToHot={filteredToHot}\n            filteredToMedium={filteredToMedium} filteredToMild={filteredToMild} filteredToSweet={filteredToSweet}\n            filteredTo30mins={filteredTo30mins} filteredToHour={filteredToHour} filteredToOverHour={filteredToOverHour}/>\n            // <PopulateDBbutton/>\n        <p>Loading...</p>\n        </>\n    )\n}\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}