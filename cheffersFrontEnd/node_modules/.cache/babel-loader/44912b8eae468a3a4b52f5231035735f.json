{"ast":null,"code":"var _jsxFileName = \"/Users/yonisabdulahi/Desktop/cheffers/cheffers_frontend/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Card.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AiFillStar } from \"react-icons/ai\";\nimport { AiOutlineStar } from \"react-icons/ai\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport food_placeholder from \"../images/food_placeholder.png\";\nimport vegetarianIcon from \"../images/vegetarianIcon.png\";\nimport veganIcon from \"../images/veganIcon.png\";\nimport pescatarianIcon from \"../images/pescatarianIcon.png\";\nimport meatOnlyIcon from \"../images/meatOnlyIcon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    name,\n    id,\n    isVegan,\n    isVegetarian,\n    isMeatOnly,\n    isPescatarian,\n    addToFaves,\n    removeFromFaves,\n    favourites\n  } = _ref;\n  const darkTheme = useContext(ThemeContext);\n  const darkMode = darkTheme.state.darkMode;\n  const [theme, setTheme] = useState(\"\");\n  useEffect(() => {\n    if (isVegan) {\n      //console.log(\"vegan\")\n      setTheme(\"card-vegan\");\n    } else if (isVegetarian) {\n      setTheme(\"card-vegetarian\");\n    } else if (isPescatarian) {\n      setTheme(\"card-pesc\");\n    } else if (isMeatOnly) {\n      setTheme(\"card-meat\");\n    }\n  }, [isVegan, isVegetarian, isMeatOnly, isPescatarian]);\n  let navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${theme} ${darkMode ? \"card-dark\" : \"card-light\"}`,\n    children: [favourites == true ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeFromFaves(id),\n      children: /*#__PURE__*/_jsxDEV(AiFillStar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addToFaves(id),\n      children: /*#__PURE__*/_jsxDEV(AiOutlineStar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: `/recipe/${id}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link-to-recipe\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"food-image\",\n          src: food_placeholder,\n          alt: \"placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-icon-block\",\n          children: [isVegetarian ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: vegetarianIcon,\n            alt: \"vegetarian\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isVegan ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: veganIcon,\n            alt: \"Vegan Icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isPescatarian ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pescatarianIcon,\n            alt: \"Pescatarian Icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isMeatOnly ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meatOnlyIcon,\n            alt: \"Meat Icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"lxzrZiEs8rnxOrazdJUmqVq0xew=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/yonisabdulahi/Desktop/cheffers/cheffers_frontend/src/components/Card.js"],"names":["React","useState","useEffect","useContext","AiFillStar","AiOutlineStar","ThemeContext","useNavigate","Link","food_placeholder","vegetarianIcon","veganIcon","pescatarianIcon","meatOnlyIcon","Card","name","id","isVegan","isVegetarian","isMeatOnly","isPescatarian","addToFaves","removeFromFaves","favourites","darkTheme","darkMode","state","theme","setTheme","navigate","pathname"],"mappings":"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","sourcesContent":["import \"../styles/Card.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AiFillStar } from \"react-icons/ai\";\nimport { AiOutlineStar } from \"react-icons/ai\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport food_placeholder from \"../images/food_placeholder.png\"\nimport vegetarianIcon from \"../images/vegetarianIcon.png\"\nimport veganIcon from \"../images/veganIcon.png\"\nimport pescatarianIcon from \"../images/pescatarianIcon.png\"\nimport meatOnlyIcon from \"../images/meatOnlyIcon.png\"\n\nconst Card = ({\n  name,\n  id,\n  isVegan,\n  isVegetarian,\n  isMeatOnly,\n  isPescatarian,\n  addToFaves,\n  removeFromFaves,\n  favourites,\n}) => {\n  const darkTheme = useContext(ThemeContext);\n  const darkMode = darkTheme.state.darkMode;\n\n  const [theme, setTheme] = useState(\"\");\n\n  useEffect(() => {\n    if (isVegan) {\n      //console.log(\"vegan\")\n      setTheme(\"card-vegan\");\n    } else if (isVegetarian) {\n      setTheme(\"card-vegetarian\");\n    } else if (isPescatarian) {\n      setTheme(\"card-pesc\");\n    } else if (isMeatOnly) {\n      setTheme(\"card-meat\");\n    }\n  }, [isVegan, isVegetarian, isMeatOnly, isPescatarian]);\n\n  let navigate = useNavigate();\n\n  return (\n    <div className={`card ${theme} ${darkMode ? \"card-dark\" : \"card-light\"}`}>\n      {favourites == true ? (\n        <button onClick={() => removeFromFaves(id)}>\n          <AiFillStar />\n        </button>\n      ) : (\n        <button onClick={() => addToFaves(id)}>\n          <AiOutlineStar />\n        </button>\n      )}\n      <Link to={{ pathname: `/recipe/${id}` }}>\n        <div className=\"link-to-recipe\">\n          {/* <img src={props.image} alt={props.alt}/> */}\n          <img className =\"food-image\" src={food_placeholder} alt=\"placeholder\"/>\n          <p>{name}</p>\n          {/* <p>Some description</p> */}\n\n          <div className=\"recipe-icon-block\">\n          {isVegetarian ? \n          <img src={vegetarianIcon} alt=\"vegetarian\" className=\"icon\"/>\n          :\n          <>\n          </>\n        }\n          {isVegan ? \n          <img src={veganIcon} alt=\"Vegan Icon\" className=\"icon\"/>\n           :\n           <>\n           </>\n          }\n          {isPescatarian ? \n          <img src={pescatarianIcon} alt=\"Pescatarian Icon\" className=\"icon\"/>\n          :\n          <>\n          </>\n         }\n          {isMeatOnly ?\n          <img src={meatOnlyIcon} alt=\"Meat Icon\" className=\"icon\"/>\n          :\n          \n          <></>}\n        \n      </div>\n        </div>\n        \n      </Link>\n      \n    </div>\n  );\n};\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}